% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extendDisNet.R
\name{extendDisNet}
\alias{extendDisNet}
\title{Extend a disease network}
\usage{
extendDisNet(
  disNet,
  relations = "xref",
  step = 10000,
  forwardAmbiguity = NULL,
  backwardAmbiguity = 1,
  avoidNodes = NA,
  avoidOrigin = NULL
)
}
\arguments{
\item{disNet}{a disease network}

\item{relations}{the kind of relationships to take into account.
Possible values among combinations of: "xref", "child", "parent", and/or "pheno".
(Default value: "xref")}

\item{step}{the number of steps to take in the search (default: 10000 ==> ~exhaustive)}

\item{forwardAmbiguity}{level of forward ambiguity allowed
(default: 10000 ==> ~no filter)}

\item{backwardAmbiguity}{level of backward ambiguity allowed
(default: 1 ==> no ambiguity allowed)}

\item{avoidNodes}{a vector of disease ids to be avoided in the search path}

\item{blacklist}{a vector of databases to avoid when extending (default = NA)}

\item{whitelist}{a vector of databases to trust when extending, only going through these database nodes (default = NA)}

\item{avoidOrigin:}{allows to avoid traversing parent/child edges from a particular ontology (default = NULL)}

\item{verbose}{show query input (default = FALSE)}
}
\value{
A normalized disease network
}
\description{
Extending a disNet through specified relationships usingw a
specified depth. Ambiguity of cross-references can be taken into account
forward and/or backward (probably more relevant than forward).
Optionally a set of disease nodes can be avoided during the extension.
}
\details{
Once a initial disNet has been constructed, it can be extended through cross-reference or hierarchical information
through a defined number of steps (default is 10,000 steps). While extending, a vector of identifiers can be provided
through which one does not want to traverse (\emph{avoidNodes}) or resource exluded when traversing and returning
hierarchical information (\emph{avoidOrigin}). The issue of ambiguity arises when traversing cross-reference edges as
different ontology use broad or narrow definition for diseases. Two adaptations are provided
to allow controlling the transitivity between nodes.

To deal with ambiguity between ontologie cross-reference edges, the property of forward and backward ambiguity is defined.
By default, filtering is only put in place on backward ambiguity to avoid moving from a narrow concept to a broader concept.
This can result in 'hopping' through more broader defined nodes, more distantly related to the initial concept.
Filtering on forward ambiguity is not advised by default but is equivalent to moving from a more broadly defined disease
concept to several narrower disease concepts in another ontology.

In addition to ambiguity scores, the use of blacklist and whitelist of ontologies that should be avoided or
required (respectively) when passing through cross-reference edges. A blacklist can be considered as a list of
databases which cros-sreference edges are trusted less than those of other databases. The nodes of these blacklisted
databases are returned; however, they are not traversed when returning cross-references. By providing NA and NULL
values to either blacklist or whitelist, a specific filtering can be obtained, more details in the table below:

Blacklist    Whitelist    Result

NA           NA           No filter applied
NULL         NULL         Returns error
NA           x            setdiff(listDB()$db - whitelist)
x            NA           blacklist
NULL         x            setdiff(listDB()$db - whitelist)
x            NULL         blacklist
x            x            setdiff(listDB()$db - whitelist)

It is also possible to extend to phenotype information with some limitations.
The basis of \emph{DODO} is the objective to travers the different disease ontologies efficiently and exhaustively.
A disNet can be annotated with phenotype information using the "pheno" as additional property for \emph{relations}.
However, obtaining diseases associated to a set of phenotype identifiers cannot directly be done using the extendDisNet.
This can be done using the \emph{convertConcept} function first, then followed by \emph{extendDisNet} (also see vignette).
}
\examples{
disNet <- buildDisNetByTerm("epilep",fields = c("synonym","label","definition"))
extDisNet <- extendDisNet(disNet,relations = c("child","xref"), toAvoid = "MONDO:0100033")

}
\seealso{
buildDisNet
}
