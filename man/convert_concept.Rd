% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_concept.R
\name{convert_concept}
\alias{convert_concept}
\title{Convert concept identifiers}
\usage{
convert_concept(
  from,
  to = NULL,
  from.concept = c("Disease", "Phenotype"),
  to.concept = c("Disease", "Phenotype"),
  deprecated = FALSE,
  transitive_ambiguity = 1,
  intransitive_ambiguity = NULL,
  step = NULL,
  verbose = FALSE
)
}
\arguments{
\item{from}{a vector with identifier to convert formatted as DB:id (eg. "MONDO:0005027)}

\item{to}{database to convert to (default = NULL, no filtering)}

\item{from.concept}{concept (disease or phenotype) of from}

\item{to.concept}{concept (disease or phenotype) to convert to}

\item{deprecated}{include deprecated identifiers (default: false)}

\item{transitive_ambiguity}{backward ambiguity while using transitivity to identify cross-references (default: 1)}

\item{intransitive_ambiguity}{specification for backward ambiguity used in the final step of conversion (default: no filter)}

\item{step}{number of steps to traverse when converting within concepts (default: NULL) (see details)}

\item{verbose}{show query input (default: FALSE)}
}
\value{
a dataframe with three columns:
\itemize{
\item from: identifier to convert
\item to: returned conversion
}
}
\description{
Another core functionality is the ability to convert concept identifiers between different
databases and types (disease or phenotype). By default a backward ambiguity of one is taken,
with no limitation on forward ambiguity.
}
\details{
Conversion is performed in different steps, first identifiers are converted (if requested) within a concept,
otherwise stated, their cross-references are returned depending on the provided parameters of transitive_ambiguity and
intransitive_ambiguity. Next, these identifiers are converted between concepts (Disease -> Phenotype or Phenotype -> Disease).

If deprecated = TRUE, only the deprecated identifiers of the original input (from) are returned.

The step parameters allows the user to specify the number of steps to take when converting within a concept (e.g. Disease
or Phenotype). If step = NA, no conversion within concepts is performed (skipping the first step). If step = NULL
the full transitivity mappings are used to return cross-references edges. If step = 1, only direct cross-references are returned.
When step = NULL, the transitive_ambiguity and intransitive_ambiguity can be used to speficy how/which cross-reference identifiers
should be returned. For step = 1, only the intransitive_ambiguity can be used as only direct cross-reference edges are returned.
}
