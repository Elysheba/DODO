% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildDisNet.R
\name{buildDisNetByTerm}
\alias{buildDisNetByTerm}
\title{Build a network of diseases according to provided identifiers}
\usage{
buildDisNetByTerm(
  term,
  fields,
  backwardAmbiguity = 1,
  forwardAmbiguity = NULL,
  avoidOrigin = NULL
)
}
\arguments{
\item{term}{a character vector of identifier to search formatted as \emph{DB:id} (e.g. "MONDO:0005027")}

\item{fields}{the field(s) where to look for matches.
"synonym", "label", "definition" are supported and all of them are considered
by default}

\item{backwardAmbiguity}{level of backward ambiguity allowed
(default: 1 ==> no ambiguity allowed)}

\item{forwardAmbiguity}{level of forward ambiguity allowed
(default: 10000 ==> ~no filter)}

\item{avoidOrigin:}{allows to avoid traversing parent/child edges from a particular ontology (default = NULL)}
}
\value{
A normalized disease network
}
\description{
Querying for (a) disease identifier(s) is simplified using the
helper function \emph{buildDisNetByID} using a vector or dataframe as input.
}
\details{
Querying for a search term is simplified using the
helper function \emph{buildDisNetByTerm} where you can specify which type of
information related to a disease you want to query, such as disease label, disease synonyms,
or disease definition, or a combination. The disNet object is constructed around the return
query results also providing information on their relationships. Therefore the \emph{buildDisNet} function
doesn't deal with transitivity of cross-reference edges, so the forward and backward ambiguity
are applied for both type of cross-references (\emph{is_xref} and \emph{is_related}) consistently.
The default implementation only has a limit on the backward ambiguity (see vignette).
In addition, it is possible to avoid returning a particular
hierarchical relationship by specifiying \emph{avoidOrigin}.
}
\examples{

buildDisNetByTerm("epilep", fields = c("synonym"))

}
\seealso{
buildDisNet, buildDisNetByTerm
}
