% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_disNet.R
\name{build_disNet}
\alias{build_disNet}
\title{Build a disease network}
\usage{
build_disNet(
  id = NULL,
  term = NULL,
  fields = c("label", "synonym"),
  ambiguity = NULL,
  avoidOrigin = NULL
)
}
\arguments{
\item{id}{disease id to include in the network}

\item{term}{a character vector of terms to search (e.g. "epilepsy")}

\item{fields}{the field(s) where to look for matches (default: c(label, synonym)).}

\item{forwardAmbiguity}{level of forward ambiguity allowed
(default: 10000 ==> ~no filter)}

\item{backwardAmbiguity}{level of backward ambiguity allowed
(default: 1 ==> no ambiguity allowed)}

\item{avoidOrigin:}{allows to avoid traversing parent/child edges from a particular ontology}

\item{verbose}{show query input (default = FALSE)}
}
\value{
A disease network is a list with the following elements
\itemize{
\item nodes: a data.frame describind disease nodes with the following columns
\itemize{
\item id (character): disease id (database:shortID)
\item database (character): disease databases
\item shortID (character): disease short identifiers
\item label (character): disease labels
\item definition (character): disease descriptions
\item level (integer): maximum level the identifier holds in the hierarchical ontology tree
\item type (character): type of node (disease or phenotype)
}
\item synonyms: a data.frame with disease synonyms with the following columns
\itemize{
\item id (character): disease id
\item synonym (character): disease synonyms
}
\item children: a data.frame with ontology information
\itemize{
\item parent (character): parent disease id
\item child (character): child disease id
\item origin (character): ontology of origin where the parent/child relationship is recorded
}
\item xref: a data.frame with cross-references
\itemize{
\item from (character): disease 1 id
\item to (character): disease 2 id
identifier: \code{paste(sort(c(xref$from, xref$to)), collapse="<-->")}
\item forwardAmbiguity (numeric): number of cross-references
between disease 1 and database 2
\item backwardAmbiguity (numeric): number of cross-references
between disease 2 and database 1
\item type (character): type of the cross-reference edge
\item ur (character): unique xref-xref id
}
\item alt: a data.frame with alternative identifiers
\itemize{
\item id (character): disease identifier
\item alt (character): alternative disease identifier
}
\item pheno: a data.frame with phenotype information
\itemize{
\item disease (character): disease identifier
\item phenotype (character): phenotype identifier
}
\item seed: a character vector of disease id
}
The following statements are ensured in normalized disease networks:
\itemize{
\item All seed are in nodes$id
\item All synonyms$id are in nodes$id
\item All children$parent are in nodes$id
\item All children$child are in nodes$id
\item All xref$from are in nodes$id
\item All xref$to are in nodes$id
\item xref$ur are not duplicated
}
}
\description{
Building a network of disease identifiers based on their relationships
described in different database integrated in DODO using two helper functions
\emph{buildDisNetByTerm} and \emph{buildDisNetByID}.
}
\details{
The disNet object is constructed around the return
query results also providing information on their relationships. Therefore the \emph{buildDisNet} function
doesn't deal with transitivity of cross-reference edges, so the forward and backward ambiguity
are applied for both type of cross-references (\emph{is_xref} and \emph{is_related}) consistently.
The default implementation only has a limit on the backward ambiguity (see vignette).
In addition, it is possible to avoid returning a particular hierarchical relationship
by specifiying \emph{avoidOrigin}.
}
\examples{
build_disNet(id = "MONDO:0005027")

}
